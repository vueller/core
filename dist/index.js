"use strict";var d=Object.defineProperty;var f=(r,e,t)=>e in r?d(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t;var l=(r,e,t)=>(f(r,typeof e!="symbol"?e+"":e,t),t);Object.defineProperties(exports,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}});class g{constructor(e,t={}){l(this,"element");l(this,"options");l(this,"inputElement",null);this.element=e,this.options={...t},this.init()}init(){this.render(),this.bindEvents()}render(){this.element.innerHTML=`
      <input type="text" 
        class="dx-textbox" 
        placeholder="${this.options.placeholder||""}"
        value="${this.options.value||""}"
        ${this.options.disabled?"disabled":""}
        ${this.options.readOnly?"readonly":""}
      >
    `,this.inputElement=this.element.querySelector("input")}bindEvents(){var e;(e=this.inputElement)==null||e.addEventListener("input",t=>{var s,n;const i=t.target;this.options.value=i.value,(n=(s=this.options).onValueChanged)==null||n.call(s,{value:i.value})})}option(e,t){if(arguments.length===1)return this.options[e];if(this.options[e]=t,!!this.inputElement)switch(e){case"value":this.inputElement.value=t!=null?t:"";break;case"disabled":this.inputElement.disabled=t;break;case"readOnly":this.inputElement.readOnly=t;break;case"placeholder":this.inputElement.placeholder=t!=null?t:"";break}}dispose(){this.inputElement&&this.inputElement.removeEventListener("input",()=>{}),this.element.innerHTML=""}}class m{constructor(){l(this,"errors",{})}add(e,t){this.errors[e]||(this.errors[e]=[]),this.errors[e].push(t)}clear(e){e?delete this.errors[e]:this.errors={}}has(e){var t;return!!((t=this.errors[e])!=null&&t.length)}first(e){var t;return((t=this.errors[e])==null?void 0:t[0])||null}all(){return this.errors}}const b=r=>typeof r=="string"?r.trim().length>0:Array.isArray(r)?r.length>0:r!=null&&r!=="",p=(r,e)=>{if(!e)return!1;const t=document.querySelector(`[name="${e}"]`);return r===(t==null?void 0:t.value)},y=(r,e)=>{const t=parseFloat(e||"0");return typeof r=="string"?r.length>=t:Number(r)>=t},E=(r,e)=>{const t=parseFloat(e||"0");return typeof r=="string"?r.length<=t:Number(r)<=t},x=(r,e)=>{if(!e)return!1;const[t,i]=e.split(","),s=parseFloat(t),n=parseFloat(i),o=typeof r=="string"?r.length:Number(r);return o>=s&&o<=n},M=r=>/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(r),$=Object.freeze(Object.defineProperty({__proto__:null,required:b,confirmed:p,min:y,max:E,between:x,email:M},Symbol.toStringTag,{value:"Module"})),v={required:"This field is required",email:"Please enter a valid email address",confirmed:r=>{const e=typeof r=="object"?r==null?void 0:r.target:r;return`Must match ${e?`the ${e} field`:"confirmation field"}`},min:r=>`Minimum of ${(typeof r=="object"?r==null?void 0:r.value:r)||"value"} characters`,max:r=>`Maximum of ${(typeof r=="object"?r==null?void 0:r.value:r)||"value"} characters`,between:r=>{let e,t;return typeof r=="string"?[e,t]=r.split(","):typeof r=="object"&&(e=r.min,t=r.max),`Must be between ${e||"min"} and ${t||"max"}`}};class w{constructor(e){l(this,"errorBag",new m);l(this,"rules",{});l(this,"fields",new Map);l(this,"locales",{});l(this,"currentLocale","en-US");this.registerDefaultRules(),this.defineMessages("en-US",v),e&&this.locales[e]&&(this.currentLocale=e)}registerDefaultRules(){Object.entries($).forEach(([e,t])=>{this.defineRule(e,t)})}defineRule(e,t){this.rules[e]=t}defineMessages(e,t){this.locales[e]={...this.locales[e],...t}}setLocale(e){if(!this.locales[e])throw new Error(`Locale '${e}' is not registered. Use defineMessages() first.`);this.currentLocale=e}resolveMessage(e,t){const i=this.locales[this.currentLocale],s=i==null?void 0:i[e];if(typeof s=="function"){const n=t!=null&&t.includes("=")?t.split(",").reduce((o,u)=>{const[c,h]=u.split("=");return c&&h&&(o[c]=h),o},{}):t;return s(n)}return s||`Validation failed for rule "${e}".`}registerField(e,t){this.fields.set(e,t)}unregisterField(e){this.fields.delete(e)}parseRule(e){const[t,i]=e.split(":");return{name:t,params:i}}async validate(e,t){const i=e.getAttribute("name")||"",s=e.value;this.errorBag.clear(i);const n=[];for(const o of t){const{name:u,params:c}=this.parseRule(o),h=this.rules[u];if(!h)throw new Error(`Validation rule "${u}" is not defined.`);if(!await h(s,c,i)){const a=this.resolveMessage(u,c);n.push(a)}}return n.length>0?(n.forEach(o=>this.errorBag.add(i,o)),Promise.reject(this.errorBag)):Promise.resolve({isValid:!0})}async validateAll(e){const t={};let i=!0;for(const[s,n]of this.fields.entries()){if(e&&!e.contains(s))continue;const o=s.getAttribute("name")||"";try{await this.validate(s,n)}catch(u){i=!1,t[o]=u.get(o)}}return{isValid:i,errors:t}}get errors(){return this.errorBag}}exports.TextBox=g;exports.Validator=w;
